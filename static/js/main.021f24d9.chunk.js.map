{"version":3,"sources":["components/SearchBar.js","components/constants.js","components/SelectSheet.js","components/SelectYearly.js","components/StatementTable.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","suggestions","setSuggestions","tickers","setTickers","names","setNames","tickToCik","setTickToCik","nameToTick","setNameToTick","tickToName","setTickToName","input","value","setValue","showAlert","setShowAlert","useEffect","n","t","key","dict","obj","toUpper","Object","keys","sort","loadTickers","className","onSubmit","e","cik","toString","length","parentSetName","parentSetCik","matches","exec","parentSetInput","preventDefault","type","list","placeholder","onChange","target","sug1","sug2","regex","RegExp","encodeURI","filter","v","test","map","str","includes","concat","slice","id","item","index","Alert","show","variant","onClose","dismissible","IS","CFS","BS","sheets","allKeys","SelectSheet","isActive","sheet","ButtonGroup","onClick","parentSetSheet","size","Button","active","SelectYearly","parentSetYearly","yearly","StatementTable","setSheet","setYearly","endDates","isValidVal","val","fillDates","form","filings","submissions","count","i","indices","push","ind","fillData","keyData","data","usdVals","label","vals","getVals","tableData","isNaN","Math","round","toLocaleString","substr","formatVals","loaded","Table","striped","bordered","hover","colSpan","createTable","App","name","setName","setCik","setData","loading","setLoading","setLoaded","setSubmissions","userInput","setUserInput","loaded1","loaded2","fetch","then","result","console","log","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.021f24d9.chunk.js","sourcesContent":["import { toUpper } from \"lodash\";\nimport {useState, useEffect} from \"react\";\nimport dict from \"../resources/company_tickers.json\";\nimport {Alert} from \"react-bootstrap\";\n\nfunction SearchBar(props) {\n    const MAX_SUGGESTIONS = 20;\n    const [suggestions, setSuggestions] = useState([]);\n    const [tickers, setTickers] = useState([]);\n    const [names, setNames] = useState([]);\n    const [tickToCik, setTickToCik] = useState({});\n    const [nameToTick, setNameToTick] = useState({});\n    const [tickToName, setTickToName] = useState({});\n    const [value, setValue] = useState(props.input);\n    const [showAlert,setShowAlert] = useState(false);\n\n    const loadTickers = () => {\n        const tickToCik = {};\n        const nameToTick = {};\n        const tickToName = {};\n        const c = \"cik_str\", n = \"title\", t = \"ticker\";\n        for(const key in dict) {\n            const obj = dict[key];\n            tickToCik[toUpper(obj[t])] = obj[c];\n            nameToTick[obj[n]] = toUpper(obj[t]);\n            tickToName[toUpper(obj[t])] = obj[n];\n        }\n        const tickers = Object.keys(tickToCik).sort();\n        const names = Object.keys(nameToTick).sort();\n        setTickers(tickers);\n        setNames(names);\n        setTickToCik(tickToCik);\n        setNameToTick(nameToTick);\n        setTickToName(tickToName);\n    }\n\n    useEffect(() => {\n        loadTickers();\n    }, []);\n\n    // can be optimized\n    const onTextChanged = (e) => {\n        setSuggestions([]);\n        const value = e.target.value;\n        setValue(value);\n        let suggestions = [];\n        let sug1 = [];\n        let sug2 = [];\n        if (value.length > 0) {\n            const regex = new RegExp(`^${encodeURI(value)}`,'i');\n            sug1 = tickers.filter(v => regex.test(v));\n            sug2 = names.filter(v => regex.test(v));\n            sug2 = sug2.map(str => {\n                if(!sug1.includes(nameToTick[str])) {\n                    return `(${nameToTick[str]}) ${str}`;\n                } else return null;\n            });\n            sug1 = sug1.map(str => {\n                return `(${str}) ${tickToName[str]}`;\n            });\n            suggestions = sug1.concat(sug2);\n            suggestions.sort();\n            suggestions = suggestions.slice(0,MAX_SUGGESTIONS);\n        }\n        setSuggestions(suggestions);\n    }\n\n    const getSuggestions = () => {\n        return (\n            <datalist id='tickers'>\n                {suggestions.map((item,index)=><option key={index} value={item}/>)}\n            </datalist>\n        );\n    }\n\n    const handleSubmit = (e) => {\n        if(toUpper(value) in tickToCik) {\n            const cikNum = tickToCik[toUpper(value)];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            props.parentSetName(tickToName[toUpper(value)]);\n            props.parentSetCik(cik);\n            setShowAlert(false);\n        } else if(value in nameToTick) {\n            const cikNum = tickToCik[nameToTick[value]];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            props.parentSetName(value);\n            props.parentSetCik(cik);\n            setShowAlert(false);\n        } else {\n            let input = value;\n            if(suggestions.length > 0) {\n                input = suggestions[0];\n            }\n            const regex = /\\(([^)]+)\\)/;\n            const matches = regex.exec(input);\n            if(matches !== null && toUpper(matches[1]) in tickToCik) {\n                const cikNum = tickToCik[toUpper(matches[1])];\n                let cik = cikNum.toString();\n                while(cik.length < 10) {\n                    cik = '0' + cik;\n                }\n                props.parentSetName(tickToName[toUpper(matches[1])]);\n                props.parentSetCik(cik);\n                setShowAlert(false);\n            } else {\n                setShowAlert(true);\n            }\n        }\n        props.parentSetInput(value);\n        e.preventDefault();\n    }\n\n    return (\n        <div>\n            <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n                <input type=\"text\" list=\"tickers\" value={value} className=\"form-control\" placeholder=\"Ticker\" onChange={onTextChanged} aria-label=\"Ticker\" aria-describedby=\"button-addon2\"/>\n                {getSuggestions()}\n                <input className=\"btn btn-outline-secondary\" type=\"submit\" value=\"Go\" id=\"button-addon2\"/>\n            </form>\n            <Alert show={showAlert} variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                Invalid name/ticker entered\n            </Alert>\n        </div>\n    );\n}\n\nexport default SearchBar;\n","\nconst incomeKeys = [\n    \"RevenueFromContractWithCustomerExcludingAssessedTax\",\n    \"CostOfGoodsAndServicesSold\",\n    \"GrossProfit\",\n    \"MarketingExpense\",\n    \"ResearchAndDevelopmentExpense\",\n    \"SellingGeneralAndAdministrativeExpense\",\n    \"GeneralAndAdministrativeExpense\",\n    \"OtherOperatingIncomeExpenseNet\",\n    \"CostsAndExpenses\",\n    \"OperatingExpenses\",\n    \"OperatingIncomeLoss\",\n    \"InvestmentIncomeInterest\",\n    \"InterestExpense\",\n    \"OtherNonoperatingIncomeExpense\",\n    \"NonoperatingIncomeExpense\",\n    \"IncomeLossFromContinuingOperationsBeforeIncomeTaxesMinorityInterestAndIncomeLossFromEquityMethodInvestments\",\n    \"IncomeTaxExpenseBenefit\",\n    \"IncomeLossFromEquityMethodInvestments\",\n    \"NetIncomeLoss\",\n    \"EarningsPerShareBasic\",\n    \"EarningsPerShareDiluted\"]\n\n// Must add all increasedecrease tags later\n// investing: Add payments, proceeds: should be in latest period and be non-zero\n// financing: add payments, proceeds with debt/stock/share\n// can add free cash flow\nconst cashFlowKeys = [\n    \"NetIncomeLoss\",\n    \"DepreciationDepletionAndAmortization\",\n    \"ShareBasedCompensation\",\n    \"OtherOperatingActivitiesCashFlowStatement\",\n    \"OtherNoncashIncomeExpense\",\n    \"DeferredIncomeTaxExpenseBenefit\",\n    \"NetCashProvidedByUsedInOperatingActivities\",\n    \"NetCashProvidedByUsedInInvestingActivities\",\n    \"NetCashProvidedByUsedInFinancingActivities\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalentsPeriodIncreaseDecreaseIncludingExchangeRateEffect\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\"\n]\n\nconst balanceKeys = [\n    \"CashAndCashEquivalentsAtCarryingValue\",\n    \"MarketableSecuritiesCurrent\",\n    \"AccountsReceivableNetCurrent\",\n    \"InventoryNet\",\n    \"NontradeReceivablesCurrent\",\n    \"OtherAssetsCurrent\",\n    \"AssetsCurrent\",\n    \"MarketableSecuritiesNoncurrent\",\n    \"PropertyPlantAndEquipmentNet\",\n    \"OtherAssetsNoncurrent\",\n    \"AssetsNoncurrent\",\n    \"Assets\",\n    \"AccountsPayableCurrent\",\n    \"OtherLiabilitiesCurrent\",\n    \"ContractWithCustomerLiabilityCurrent\",\n    \"CommercialPaper\",\n    \"LongTermDebtCurrent\",\n    \"LiabilitiesCurrent\",\n    \"LongTermDebtNoncurrent\",\n    \"OtherLiabilitiesNoncurrent\",\n    \"LiabilitiesNoncurrent\",\n    \"Liabilities\",\n    \"CommonStocksIncludingAdditionalPaidInCapital\",\n    \"RetainedEarningsAccumulatedDeficit\",\n    \"AccumulatedOtherComprehensiveIncomeLossNetOfTax\",\n    \"StockholdersEquity\",\n    \"LiabilitiesAndStockholdersEquity\"\n]\n\nconst IS = \"Income Statement\";\nconst CFS = \"Cash Flow Statement\";\nconst BS = \"Balance Sheet\";\n\nexport const sheets = {\n    IS: IS,\n    CFS: CFS,\n    BS: BS\n}\n\nexport const allKeys = {\n    [IS] : incomeKeys,\n    [CFS] : cashFlowKeys,\n    [BS] : balanceKeys\n}\n","import {Button, ButtonGroup} from \"react-bootstrap\";\nimport {sheets} from \"./constants\"\n\nconst variant = \"secondary\";\n\nfunction SelectSheet(props) {\n\n    const handleClick = (e) => {\n        props.parentSetSheet(e.target.value);\n    }\n\n    const isActive = (sheet) => {\n        return sheet === props.sheet;\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick} size=\"sm\">\n                <Button variant={variant} value={sheets.IS} active={isActive(sheets.IS)}>Income Statement</Button>\n                <Button variant={variant} value={sheets.CFS} active={isActive(sheets.CFS)}>Cash Flow Statement</Button>\n                <Button variant={variant} value={sheets.BS} active={isActive(sheets.BS)}>Balance Sheet</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectSheet;","import {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst variant=\"secondary\";\n\nfunction SelectYearly(props) {\n    const handleClick = (e) => {\n        props.parentSetYearly(e.target.value===\"true\");\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick} size=\"sm\">\n                <Button variant={variant} value={false} active={!props.yearly}>By Quarter</Button>\n                <Button variant={variant} value={true} active={props.yearly}>By Year</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectYearly;","import {Table} from \"react-bootstrap\";\nimport {allKeys, sheets} from \"./constants\";\nimport \"./StatementTable.css\";\nimport {useState} from \"react\";\nimport SelectSheet from \"./SelectSheet\";\nimport SelectYearly from \"./SelectYearly\";\n\nconst FORM_COUNT = 3;\n\nfunction StatementTable(props) {\n\n    const [sheet,setSheet] = useState(sheets.IS);\n    const [yearly,setYearly] = useState(false);\n    let endDates = [];\n    const CASH_KEY = \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\";\n\n    const isValidVal = (val, str) => {\n        if(sheet === sheets.BS || str === CASH_KEY) {\n            return endDates.includes(val[\"end\"]);\n        }\n        return yearly ? val[\"frame\"].length === 6 : val[\"frame\"].length === 8;\n    }\n\n    const isValidDate = (form) => {\n        return yearly ? form === \"10-K\" : form === \"10-Q\" || form === \"10-K\";\n    }\n\n    const getVals = (usdVals,str) => {\n        let vals = [];\n        let count = 0;\n        for(let i=usdVals.length-1;i>=0 && count<FORM_COUNT;--i) {\n            if(usdVals[i][\"frame\"] && isValidVal(usdVals[i],str)) {\n                vals.push(usdVals[i][\"val\"]);\n                ++count;\n            }\n        }\n        while(count < FORM_COUNT) {\n            vals.push(\"N/A\");\n            ++count;\n        }\n        return vals;\n    }\n\n    const formatVals = (vals,str) => {\n        for(let i=0;i<vals.length;++i) {\n            let val = vals[i];\n            if(!isNaN(val)) {\n                if (!str.includes(\"PerShare\")) {\n                    val /= 1000000\n                }\n                val = Math.round(val);\n                val = val < 0 ? \"(\" + val.toLocaleString().substr(1) + \")\" : val.toLocaleString();\n                vals[i] = val;\n            }\n        }\n        return vals;\n    }\n\n    const fillDates = () => {\n        const filings = props.submissions[\"filings\"][\"recent\"];\n        let count = 0, i = 0, indices = [];\n        while(count < FORM_COUNT && i < filings[\"form\"].length) {\n            if(isValidDate(filings[\"form\"][i])) {\n                indices.push(i);\n                ++count;\n            }\n            ++i;\n        }\n        endDates = [];\n        return indices.map((val, ind) => {\n            endDates.push(filings[\"reportDate\"][val]);\n            return (<th key={ind}>{filings[\"reportDate\"][val]}</th>);\n        });\n    }\n\n    const fillData = () => {\n        return allKeys[sheet].map((str, ind) => {\n            const keyData = props.data[\"facts\"][\"us-gaap\"][str];\n            if (keyData) {\n                let usdVals = [];\n                for (const key in keyData[\"units\"]) {\n                    usdVals = usdVals.concat(keyData[\"units\"][key]);\n                }\n                const label = keyData[\"label\"];\n                let vals = getVals(usdVals,str);\n                vals = formatVals(vals,str);\n                const tableData = vals.map((val,ind) => {\n                    return (<td className=\"data\" key={ind}>{val}</td>);\n                });\n                return (\n                    <tr key={ind}>\n                        <td className=\"label\">{label}</td>\n                        {tableData}\n                    </tr>\n                );\n            } else return null;\n        });\n    }\n\n    const createTable = () => {\n        if(props.loaded) {\n            return (\n                <div>\n                    <div className=\"table-settings\">\n                        <div className=\"select-sheet\">\n                            <SelectSheet sheet={sheet} parentSetSheet={setSheet}/>\n                        </div>\n                        <div className=\"select-yearly\">\n                            <SelectYearly yearly={yearly} parentSetYearly={setYearly}/>\n                        </div>\n                    </div>\n                    <h6 className=\"caption\">(in millions)</h6>\n                    <Table striped bordered hover size=\"sm\">\n                        <thead className=\"statement-header\">\n                            <tr>\n                                <th className=\"label\"></th>\n                                <th colSpan={FORM_COUNT}>{yearly ? \"Twelve Months Ended\" : \"Three Months Ended\"}</th>\n                            </tr>\n                            <tr>\n                                <th className=\"label\"></th>\n                                {fillDates()}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {fillData()}\n                        </tbody>\n                    </Table>\n                </div>);\n        }\n    }\n\n    return (\n        <div>\n            {createTable()}\n        </div>\n    );\n}\n\nexport default StatementTable;\n","import './App.css';\nimport SearchBar from './components/SearchBar';\nimport StatementTable from './components/StatementTable';\nimport {Alert} from \"react-bootstrap\";\nimport {useState, useEffect} from \"react\";\nimport fetch from \"axios\";\n\nfunction App() {\n  const [name, setName] = useState(null);\n  const [cik,setCik] = useState(null);\n  const [data,setData] = useState({});\n  const [loading,setLoading] = useState(false);\n  const [loaded,setLoaded] = useState(false);\n  const [submissions,setSubmissions] = useState({});\n  const [userInput,setUserInput] = useState(\"\");\n  const [showAlert,setShowAlert] = useState(false);\n\n  useEffect(() => {\n      if(cik) {\n          let loaded1 = false, loaded2 = false;\n          setLoading(true);\n          setLoaded(false);\n          fetch(`https://data.sec.gov/api/xbrl/companyfacts/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setData(result.data);\n                      loaded1 = true;\n                      if(loaded2) {\n                          setLoaded(true);\n                          setLoading(false);\n                      }\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoaded(false);\n                      setLoading(false);\n                      setShowAlert(true);\n                  }\n              )\n          fetch(`https://data.sec.gov/submissions/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setSubmissions(result.data);\n                      loaded2 = true;\n                      if(loaded1) {\n                          setLoaded(true);\n                          setLoading(false);\n                      }\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoaded(false);\n                      setLoading(false);\n                      setShowAlert(true);\n                  }\n              )\n      }\n  }, [cik]);\n\n  const makePage = () => {\n      if(cik) {\n          return (\n              <div className=\"loaded-page\">\n                  <h1 className=\"name\">{name}</h1>\n                  <div className=\"search-bar-loaded\">\n                      <SearchBar input={userInput} parentSetInput={setUserInput} parentSetCik={setCik} parentSetName={setName}/>\n                      <Alert show={showAlert} variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                          Unable to fetch statements\n                      </Alert>\n                  </div>\n                  <div className=\"statement-table\">\n                      <StatementTable submissions={submissions} data={data} loading={loading} loaded={loaded}/>\n                  </div>\n              </div>\n          );\n      } else {\n          return (\n              <div className=\"search-bar-home\">\n                  <SearchBar input={userInput} parentSetInput={setUserInput} parentSetCik={setCik} parentSetName={setName}/>\n              </div>\n          );\n      }\n  }\n\n  return (\n    <div className=\"App\">\n        {makePage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}