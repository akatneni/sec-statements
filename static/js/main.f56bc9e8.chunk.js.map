{"version":3,"sources":["components/SearchBar.js","components/constants.js","components/SelectSheet.js","components/SelectYearly.js","components/StatementTable.js","components/SelectSubmissions.js","components/FilingTable.js","App.js","reportWebVitals.js","index.js"],"names":["tickers","names","tickToCik","nameToTick","tickToName","SearchBar","props","useState","suggestions","setSuggestions","value","setValue","showAlert","setShowAlert","useEffect","n","t","key","dict","obj","toUpper","Object","keys","sort","loadTickers","submitVal","val","finalCik","finalName","cik","toString","length","input","includes","matches","exec","parentSetCik","parentSetName","sessionStorage","setItem","className","onSubmit","e","target","preventDefault","type","list","placeholder","onChange","allSug","sug1","sug2","regex","RegExp","encodeURI","filter","v","test","map","str","concat","slice","console","log","autoFocus","id","item","index","Alert","show","variant","onClose","dismissible","IS","CFS","BS","sheets","allKeys","SelectSheet","isActive","sheet","ButtonGroup","onClick","parentSetSheet","size","Button","active","SelectYearly","parentSetYearly","yearly","StatementTable","setSheet","setYearly","millions","isValidVal","loaded","colHeader","colSpan","getColHeader","dates","tableData","form","filings","submissions","count","i","indices","push","lastDate","newYear","parseInt","substr","substring","ind","fillDates","set","revenueArr","data","keyData","usdVals","label","vals","getVals","isNaN","Math","round","toLocaleString","formatVals","fillData","Table","striped","bordered","hover","SelectSubmissions","parentSetShowSubmissions","showSubmissions","formDescription","FilingTable","href","rel","recent","accNum","replace","doc","link","fillTable","App","getItem","name","setName","setCik","setData","loading","setLoading","setLoaded","setSubmissions","setShowSubmissions","loaded1","loaded2","fetch","then","result","error","xmlns","width","height","fill","viewBox","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f56bc9e8.chunk.js","sourcesContent":["import { toUpper } from \"lodash\";\nimport {useState, useEffect} from \"react\";\nimport dict from \"../resources/company_tickers.json\";\nimport {Alert} from \"react-bootstrap\";\n\n\nlet tickers = [];\nlet names = [];\nlet tickToCik = {};\nlet nameToTick = {};\nlet tickToName = {};\n\nfunction SearchBar(props) {\n    const MAX_SUGGESTIONS = 50;\n    const [suggestions, setSuggestions] = useState([]);\n    const [value, setValue] = useState();\n    const [showAlert,setShowAlert] = useState(false);\n\n    const loadTickers = () => {\n        const c = \"cik_str\", n = \"title\", t = \"ticker\";\n        for(const key in dict) {\n            const obj = dict[key];\n            tickToCik[toUpper(obj[t])] = obj[c];\n            nameToTick[obj[n]] = toUpper(obj[t]);\n            tickToName[toUpper(obj[t])] = obj[n];\n        }\n        tickers = Object.keys(tickToCik).sort();\n        names = Object.keys(nameToTick).sort();\n    }\n\n    useEffect(() => {\n        loadTickers();\n    }, []);\n\n    // can be optimized\n    const onTextChanged = (e) => {\n        const val = e.target.value;\n        setValue(val);\n        if(suggestions.includes(val)) {\n            submitVal(val);\n            return;\n        }\n        let allSug = [];\n        let sug1 = [];\n        let sug2 = [];\n        try {\n            if (val.length > 0) {\n                const regex = new RegExp(`^${encodeURI(val)}`, 'i');\n                sug1 = tickers.filter(v => regex.test(v));\n                sug2 = names.filter(v => regex.test(v));\n                sug2 = sug2.map(str => {\n                    if (!sug1.includes(nameToTick[str])) {\n                        return `(${nameToTick[str]}) ${str}`;\n                    } else return null;\n                });\n                sug1 = sug1.map(str => {\n                    return `(${str}) ${tickToName[str]}`;\n                });\n                allSug = sug1.concat(sug2);\n                allSug.sort();\n                allSug = allSug.slice(0, MAX_SUGGESTIONS);\n            }\n            setSuggestions(allSug);\n        } catch (e) {\n            console.log(e);\n            setShowAlert(true);\n        }\n    }\n\n    const getSuggestions = () => {\n        return (\n            <datalist id='tickers'>\n                {suggestions.map((item,index)=><option key={index} value={item}/>)}\n            </datalist>\n        );\n    }\n\n    const handleSubmit = (e) => {\n        submitVal(e.target.value);\n        e.preventDefault();\n    }\n\n    const submitVal = (val) => {\n        let finalCik = null, finalName = null;\n        if(toUpper(val) in tickToCik) {\n            const cikNum = tickToCik[toUpper(val)];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            finalName = tickToName[toUpper(val)];\n            finalCik = cik;\n        } else if(val in nameToTick) {\n            const cikNum = tickToCik[nameToTick[val]];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            finalName = val;\n            finalCik = cik;\n        } else {\n            let input = val;\n            if(!suggestions.includes(input) && suggestions.length > 0) {\n                input = suggestions[0];\n            }\n            const regex = /\\(([^)]+)\\)/;\n            const matches = regex.exec(input);\n            if(matches !== null && toUpper(matches[1]) in tickToCik) {\n                const cikNum = tickToCik[toUpper(matches[1])];\n                let cik = cikNum.toString();\n                while(cik.length < 10) {\n                    cik = '0' + cik;\n                }\n                finalName = tickToName[toUpper(matches[1])];\n                finalCik = cik;\n            } else {\n                setShowAlert(true);\n            }\n        }\n        if(finalCik) {\n            props.parentSetCik(finalCik);\n            props.parentSetName(finalName);\n            setShowAlert(false);\n            sessionStorage.setItem('cik', finalCik);\n            sessionStorage.setItem('name', finalName);\n        }\n        setValue(\"\");\n        setSuggestions([]);\n    }\n\n    return (\n        <div>\n            <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n                <input type=\"text\" list=\"tickers\" value={value} className=\"form-control\" placeholder=\"Ticker\" onChange={onTextChanged} aria-label=\"Ticker\" aria-describedby=\"button-addon2\" autoFocus/>\n                {getSuggestions()}\n                <input className=\"btn btn-outline-secondary\" type=\"submit\" value=\"Go\" id=\"button-addon2\"/>\n            </form>\n            <Alert show={showAlert} variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                Invalid name/ticker entered\n            </Alert>\n        </div>\n    );\n}\n\nexport default SearchBar;\n","\nconst incomeKeys = [\n    \"RevenueFromContractWithCustomerExcludingAssessedTax\",\n    \"CostOfGoodsAndServicesSold\",\n    \"GrossProfit\",\n    \"MarketingExpense\",\n    \"ResearchAndDevelopmentExpense\",\n    \"SellingGeneralAndAdministrativeExpense\",\n    \"GeneralAndAdministrativeExpense\",\n    \"OtherOperatingIncomeExpenseNet\",\n    \"CostsAndExpenses\",\n    \"OperatingExpenses\",\n    \"OperatingIncomeLoss\",\n    \"InvestmentIncomeInterest\",\n    \"InterestExpense\",\n    \"OtherNonoperatingIncomeExpense\",\n    \"NonoperatingIncomeExpense\",\n    \"IncomeLossFromContinuingOperationsBeforeIncomeTaxesMinorityInterestAndIncomeLossFromEquityMethodInvestments\",\n    \"IncomeTaxExpenseBenefit\",\n    \"IncomeLossFromEquityMethodInvestments\",\n    \"NetIncomeLoss\",\n    \"EarningsPerShareBasic\",\n    \"EarningsPerShareDiluted\"]\n\n// Must add all increasedecrease tags later\n// investing: Add payments, proceeds: should be in latest period and be non-zero\n// financing: add payments, proceeds with debt/stock/share\n// can add free cash flow\nconst cashFlowKeys = [\n    \"NetIncomeLoss\",\n    \"DepreciationDepletionAndAmortization\",\n    \"ShareBasedCompensation\",\n    \"OtherOperatingActivitiesCashFlowStatement\",\n    \"OtherNoncashIncomeExpense\",\n    \"DeferredIncomeTaxExpenseBenefit\",\n    \"NetCashProvidedByUsedInOperatingActivities\",\n    \"NetCashProvidedByUsedInInvestingActivities\",\n    \"NetCashProvidedByUsedInFinancingActivities\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalentsPeriodIncreaseDecreaseIncludingExchangeRateEffect\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\"\n]\n\nconst balanceKeys = [\n    \"CashAndCashEquivalentsAtCarryingValue\",\n    \"MarketableSecuritiesCurrent\",\n    \"AccountsReceivableNetCurrent\",\n    \"InventoryNet\",\n    \"NontradeReceivablesCurrent\",\n    \"OtherAssetsCurrent\",\n    \"AssetsCurrent\",\n    \"MarketableSecuritiesNoncurrent\",\n    \"PropertyPlantAndEquipmentNet\",\n    \"OtherAssetsNoncurrent\",\n    \"AssetsNoncurrent\",\n    \"Assets\",\n    \"AccountsPayableCurrent\",\n    \"OtherLiabilitiesCurrent\",\n    \"ContractWithCustomerLiabilityCurrent\",\n    \"CommercialPaper\",\n    \"LongTermDebtCurrent\",\n    \"LiabilitiesCurrent\",\n    \"LongTermDebtNoncurrent\",\n    \"OtherLiabilitiesNoncurrent\",\n    \"LiabilitiesNoncurrent\",\n    \"Liabilities\",\n    \"CommonStocksIncludingAdditionalPaidInCapital\",\n    \"RetainedEarningsAccumulatedDeficit\",\n    \"AccumulatedOtherComprehensiveIncomeLossNetOfTax\",\n    \"StockholdersEquity\",\n    \"LiabilitiesAndStockholdersEquity\"\n]\n\nconst IS = \"Income Statement\";\nconst CFS = \"Cash Flow Statement\";\nconst BS = \"Balance Sheet\";\n\nexport const sheets = {\n    IS: IS,\n    CFS: CFS,\n    BS: BS\n}\n\nexport const allKeys = {\n    [IS] : incomeKeys,\n    [CFS] : cashFlowKeys,\n    [BS] : balanceKeys\n}\n","import {Button, ButtonGroup} from \"react-bootstrap\";\nimport {sheets} from \"./constants\"\n\nconst variant = \"secondary\";\n\nfunction SelectSheet(props) {\n\n    const handleClick = (e) => {\n        props.parentSetSheet(e.target.value);\n    }\n\n    const isActive = (sheet) => {\n        return sheet === props.sheet;\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick} size=\"sm\">\n                <Button variant={variant} value={sheets.IS} active={isActive(sheets.IS)}>Income Statement</Button>\n                <Button variant={variant} value={sheets.CFS} active={isActive(sheets.CFS)}>Cash Flow Statement</Button>\n                <Button variant={variant} value={sheets.BS} active={isActive(sheets.BS)}>Balance Sheet</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectSheet;","import {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst variant=\"secondary\";\n\nfunction SelectYearly(props) {\n    const handleClick = (e) => {\n        props.parentSetYearly(e.target.value===\"true\");\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick} size=\"sm\">\n                <Button variant={variant} value={false} active={!props.yearly}>Quarterly</Button>\n                <Button variant={variant} value={true} active={props.yearly}>Yearly</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectYearly;","import {Table} from \"react-bootstrap\";\nimport {allKeys, sheets} from \"./constants\";\nimport \"./StatementTable.css\";\nimport {useState} from \"react\";\nimport SelectSheet from \"./SelectSheet\";\nimport SelectYearly from \"./SelectYearly\";\n\nconst FORM_COUNT = 3;\n\nfunction StatementTable(props) {\n\n    const [sheet,setSheet] = useState(sheets.IS);\n    const [yearly,setYearly] = useState(false);\n    const CASH_KEY = \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\";\n    let millions = false;\n\n    const getColHeader = () => {\n        if(sheet !== sheets.BS) {\n            return (\n                <tr>\n                    <th className=\"label\"/>\n                    <th colSpan={FORM_COUNT}>{yearly ? \"Twelve Months Ended\" : \"Three Months Ended\"}</th>\n                </tr>)\n        }\n    }\n\n    const isValidVal = (val, str) => {\n        if(sheet === sheets.BS || str === CASH_KEY) {\n            return yearly ? val[\"form\"] === \"10-K\" : val[\"form\"] === \"10-Q\" || val[\"form\"] === \"10-K\" ;\n        }\n        if(val[\"frame\"]) {\n            return yearly ? val[\"frame\"].length === 6 : val[\"frame\"].length === 8;\n        }\n        return false;\n    }\n\n    const isValidDate = (form) => {\n        return yearly ? form === \"10-K\" : form === \"10-Q\" || form === \"10-K\";\n    }\n\n    const getVals = (usdVals,str) => {\n        let vals = [];\n        let count = 0;\n        for(let i=usdVals.length-1;i>=0 && count<FORM_COUNT;--i) {\n            if(isValidVal(usdVals[i],str)) {\n                vals.push(usdVals[i][\"val\"]);\n                ++count;\n            }\n        }\n        while(count < FORM_COUNT) {\n            vals.push(\"N/A\");\n            ++count;\n        }\n        return vals;\n    }\n\n    const formatVals = (vals,str) => {\n        for(let i=0;i<vals.length;++i) {\n            let val = vals[i];\n            if(!isNaN(val)) {\n                if (!str.includes(\"PerShare\")) {\n                    val /= (millions ? 1000000 : 1000);\n                    val = Math.round(val);\n                }\n                if(val === -0) {\n                    val = 0;\n                }\n                val = val < 0 ? \"(\" + val.toLocaleString().substr(1) + \")\" : val.toLocaleString();\n                vals[i] = val;\n            }\n        }\n        return vals;\n    }\n\n    const fillDates = () => {\n        const filings = props.submissions[\"filings\"][\"recent\"];\n        let count = 0, i = 0, indices = [];\n        while(count < FORM_COUNT && i < filings[\"form\"].length) {\n            if(isValidDate(filings[\"form\"][i])) {\n                indices.push(i);\n                ++count;\n            }\n            ++i;\n        }\n        indices = indices.map((val) => {return filings[\"reportDate\"][val];});\n        while(indices.length < FORM_COUNT) {\n            const lastDate = indices[indices.length-1];\n            const newYear =  parseInt(lastDate.substr(0,4))-1;\n            indices.push(newYear + lastDate.substring(4));\n        }\n        return indices.map((val, ind) => {\n            return (<th key={ind}>{val}</th>);\n        });\n    }\n\n    const fillData = () => {\n        let set = false;\n        let revenueArr = props.data[\"facts\"][\"us-gaap\"][\"RevenueFromContractWithCustomerExcludingAssessedTax\"];\n        if(revenueArr) {\n            revenueArr = revenueArr[\"units\"][\"USD\"];\n            if(revenueArr && revenueArr[revenueArr.length-1][\"val\"]>10000000000) {\n                millions = true;\n                set = true;\n            } else if(revenueArr){\n                set = false;\n            }\n        }\n        return allKeys[sheet].map((str, ind) => {\n            const keyData = props.data[\"facts\"][\"us-gaap\"][str];\n            if (keyData) {\n                let usdVals = [];\n                for (const key in keyData[\"units\"]) {\n                    usdVals = usdVals.concat(keyData[\"units\"][key]);\n                }\n                const label = keyData[\"label\"];\n                let vals = getVals(usdVals,str);\n                if(!set && ind===0 && vals[0]>10000000000) {\n                    set = true;\n                    millions = true;\n                }\n                vals = formatVals(vals,str);\n                const tableData = vals.map((val,ind) => {\n                    return (<td className=\"data\" key={ind}>{val}</td>);\n                });\n                return (\n                    <tr key={ind}>\n                        <td className=\"label\">{label}</td>\n                        {tableData}\n                    </tr>\n                );\n            } else return null;\n        });\n    }\n\n    if(props.loaded) {\n        const colHeader = getColHeader();\n        let dates = [];\n        let tableData = null;\n        try {\n            dates = fillDates();\n        } catch (e) { console.log(e); }\n        try {\n            tableData = fillData();\n        } catch(e) {\n            console.log(e);\n            props.setShowAlert(true);\n        }\n        return (\n            <div className=\"statement-table\">\n                <div className=\"table-settings\">\n                    <div className=\"select-sheet\">\n                        <SelectSheet sheet={sheet} parentSetSheet={setSheet}/>\n                    </div>\n                    <div className=\"select-yearly\">\n                        <SelectYearly yearly={yearly} parentSetYearly={setYearly}/>\n                    </div>\n                </div>\n                <h6 className=\"caption\">(in {millions ? \"millions\" : \"thousands\"})</h6>\n                <Table striped bordered hover size=\"sm\">\n                    <thead className=\"statement-header\">\n                        {colHeader}\n                    <tr>\n                        <th className=\"label\"/>\n                        {dates}\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {tableData}\n                    </tbody>\n                </Table>\n            </div>);\n    } else return null;\n}\n\nexport default StatementTable;\n","import {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst variant=\"primary\";\n\nfunction SelectSubmissions(props) {\n    const handleClick = (e) => {\n        props.parentSetShowSubmissions(e.target.value===\"true\");\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick}>\n                <Button variant={variant} value={false} active={!props.showSubmissions}>Statements</Button>\n                <Button variant={variant} value={true} active={props.showSubmissions}>Filings</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectSubmissions;","import {Table} from \"react-bootstrap\";\n\nconst formDescription = {\n    \"10-K\" : \"Annual Report\",\n    \"10-Q\" : \"Quarterly Report\",\n}\n\nfunction FilingTable(props) {\n\n    const fillTable = () => {\n        const recent = props.submissions[\"filings\"][\"recent\"];\n        return recent[\"form\"].map((form,ind) => {\n            if(form === \"10-K\" || form === \"10-Q\") {\n                const accNum = recent[\"accessionNumber\"][ind].replace(/-/g,'');\n                const doc=recent[\"primaryDocument\"][ind];\n                const link = `https://www.sec.gov/ix?doc=/Archives/edgar/data/${props.cik}/${accNum}/${doc}`;\n                return (\n                    <tr key={ind}>\n                        <td>{form}</td>\n                        <td><a rel=\"noreferrer\" target=\"_blank\" href={link}>{formDescription[form]}</a></td>\n                        <td>{recent[\"filingDate\"][ind]}</td>\n                        <td>{recent[\"reportDate\"][ind]}</td>\n                    </tr>\n                )\n            } else return null;\n        });\n    }\n\n    return (\n        <div>\n            <h6><a href={`https://www.sec.gov/edgar/browse/?CIK=${props.cik}&owner=exclude`} target=\"_blank\" rel=\"noreferrer\">\n                See all filings\n            </a></h6>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>Form type</th>\n                        <th>Form Description</th>\n                        <th>Filing Date</th>\n                        <th>Reporting Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {fillTable()}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default FilingTable;","import './App.css';\nimport SearchBar from './components/SearchBar';\nimport StatementTable from './components/StatementTable';\nimport {Alert} from \"react-bootstrap\";\nimport {useState, useEffect} from \"react\";\nimport fetch from \"axios\";\nimport SelectSubmissions from \"./components/SelectSubmissions\";\nimport FilingTable from \"./components/FilingTable\";\n\nfunction App() {\n  const [name, setName] = useState(sessionStorage.getItem('name') || null);\n  const [cik,setCik] = useState(sessionStorage.getItem('cik') || null);\n  const [data,setData] = useState({});\n  const [loading,setLoading] = useState(false);\n  const [loaded,setLoaded] = useState(false);\n  const [submissions,setSubmissions] = useState({});\n  const [showAlert,setShowAlert] = useState(false);\n  const [showSubmissions, setShowSubmissions] = useState(false);\n\n  useEffect(() => {\n      if(cik) {\n          let loaded1 = false, loaded2 = false;\n          setLoading(true);\n          setLoaded(false);\n          fetch(`https://data.sec.gov/api/xbrl/companyfacts/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setData(result.data);\n                      loaded1 = true;\n                      if(loaded2) {\n                          setLoaded(true);\n                          setLoading(false);\n                      }\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoaded(false);\n                      setLoading(false);\n                      setShowAlert(true);\n                  }\n              )\n          fetch(`https://data.sec.gov/submissions/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setSubmissions(result.data);\n                      loaded2 = true;\n                      if(loaded1) {\n                          setLoaded(true);\n                          setLoading(false);\n                      }\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoaded(false);\n                      setLoading(false);\n                      setShowAlert(true);\n                  }\n              )\n          setShowAlert(false);\n      }\n  }, [cik]);\n\n  const loadTable = () => {\n      if(showAlert) {\n          return null;\n      }\n      if(showSubmissions) {\n          return (\n              <div className=\"submissions-table app-table\">\n                  <FilingTable setShowAlert={setShowAlert} cik={cik} submissions={submissions} loaded={loaded} loading={loading}/>\n              </div>\n          );\n      } else {\n          return (\n              <div className=\"statement-table app-table\">\n                  <StatementTable setShowAlert={setShowAlert} submissions={submissions} data={data} loaded={loaded} loading={loading}/>\n              </div>\n          );\n      }\n  }\n\n  const makePage = () => {\n      if(cik) {\n          return (\n              <div className=\"loaded-page\">\n                  <h1 className=\"name\">{name}</h1>\n                  <div className=\"search-bar-loaded\">\n                      <SearchBar parentSetCik={setCik} parentSetName={setName}/>\n                      <Alert show={showAlert} variant=\"danger\" >\n                          Unable to fetch statements\n                      </Alert>\n                  </div>\n                  <div className=\"select-submissions\">\n                      <SelectSubmissions showSubmissions={showSubmissions} parentSetShowSubmissions={setShowSubmissions}/>\n                  </div>\n                  {loadTable()}\n              </div>\n          );\n      } else {\n          return (\n              <div>\n                  <div className=\"search-bar-home\">\n                      <h5>Search for a company by ticker or by name</h5>\n                      <SearchBar parentSetCik={setCik} parentSetName={setName}/>\n                  </div>\n                  <div className=\"card-footer\">\n                      <p> by <a href=\"https://github.com/akatneni\" target=\"_blank\" rel=\"noreferrer\">Aryan Katneni</a>.\n                          View the source\n                          code on <a href=\"https://github.com/akatneni/sec-statements\" target=\"_blank\" rel=\"noreferrer\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                   className=\"bi bi-github\" viewBox=\"0 0 16 16\">\n                                  <path\n                                      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/>\n                              </svg> Github\n                          </a>.\n                      </p>\n                  </div>\n            </div>\n          );\n      }\n  }\n\n  return (\n    <div className=\"App\">\n        {makePage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}