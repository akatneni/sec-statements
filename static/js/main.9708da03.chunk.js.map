{"version":3,"sources":["components/SearchBar.js","components/constants.js","components/SelectSheet.js","components/SelectYearly.js","components/StatementTable.js","components/SelectSubmissions.js","components/FilingTable.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","suggestions","setSuggestions","tickers","setTickers","names","setNames","tickToCik","setTickToCik","nameToTick","setNameToTick","tickToName","setTickToName","input","value","setValue","showAlert","setShowAlert","useEffect","n","t","key","dict","obj","toUpper","Object","keys","sort","loadTickers","submitVal","finalCik","finalName","cik","toString","length","matches","exec","parentSetCik","parentSetName","sessionStorage","setItem","parentSetInput","className","onSubmit","e","preventDefault","type","list","placeholder","onChange","target","includes","allSug","sug1","sug2","regex","RegExp","encodeURI","filter","v","test","map","str","concat","slice","id","item","index","Alert","show","variant","onClose","dismissible","IS","CFS","BS","sheets","allKeys","SelectSheet","isActive","sheet","ButtonGroup","onClick","parentSetSheet","size","Button","active","SelectYearly","parentSetYearly","yearly","StatementTable","setSheet","setYearly","millions","isValidVal","val","console","log","loaded","Table","striped","bordered","hover","colSpan","getColHeader","form","filings","submissions","count","i","indices","push","lastDate","newYear","parseInt","substr","substring","ind","fillDates","keyData","data","usdVals","label","vals","getVals","Math","abs","tableData","isNaN","round","toLocaleString","formatVals","SelectSubmissions","parentSetShowSubmissions","showSubmissions","formDescription","FilingTable","href","recent","accNum","replace","doc","link","rel","fillTable","App","getItem","name","setName","setCik","setData","loading","setLoading","setLoaded","setSubmissions","userInput","setUserInput","setShowSubmissions","loaded1","loaded2","fetch","then","result","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9708da03.chunk.js","sourcesContent":["import { toUpper } from \"lodash\";\nimport {useState, useEffect} from \"react\";\nimport dict from \"../resources/company_tickers.json\";\nimport {Alert} from \"react-bootstrap\";\n\nfunction SearchBar(props) {\n    const MAX_SUGGESTIONS = 50;\n    const [suggestions, setSuggestions] = useState([]);\n    const [tickers, setTickers] = useState([]);\n    const [names, setNames] = useState([]);\n    const [tickToCik, setTickToCik] = useState({});\n    const [nameToTick, setNameToTick] = useState({});\n    const [tickToName, setTickToName] = useState({});\n    const [value, setValue] = useState(props.input);\n    const [showAlert,setShowAlert] = useState(false);\n\n    const loadTickers = () => {\n        const tickToCik = {};\n        const nameToTick = {};\n        const tickToName = {};\n        const c = \"cik_str\", n = \"title\", t = \"ticker\";\n        for(const key in dict) {\n            const obj = dict[key];\n            tickToCik[toUpper(obj[t])] = obj[c];\n            nameToTick[obj[n]] = toUpper(obj[t]);\n            tickToName[toUpper(obj[t])] = obj[n];\n        }\n        const tickers = Object.keys(tickToCik).sort();\n        const names = Object.keys(nameToTick).sort();\n        setTickers(tickers);\n        setNames(names);\n        setTickToCik(tickToCik);\n        setNameToTick(nameToTick);\n        setTickToName(tickToName);\n    }\n\n    useEffect(() => {\n        loadTickers();\n    }, []);\n\n    // can be optimized\n    const onTextChanged = (e) => {\n        const value = e.target.value;\n        setValue(value);\n        if(suggestions.includes(value)) {\n            setSuggestions([value]);\n            submitVal();\n            return;\n        }\n        let allSug = [];\n        let sug1 = [];\n        let sug2 = [];\n        if (value.length > 0) {\n            const regex = new RegExp(`^${encodeURI(value)}`,'i');\n            sug1 = tickers.filter(v => regex.test(v));\n            sug2 = names.filter(v => regex.test(v));\n            sug2 = sug2.map(str => {\n                if(!sug1.includes(nameToTick[str])) {\n                    return `(${nameToTick[str]}) ${str}`;\n                } else return null;\n            });\n            sug1 = sug1.map(str => {\n                return `(${str}) ${tickToName[str]}`;\n            });\n            allSug = sug1.concat(sug2);\n            allSug.sort();\n            allSug = allSug.slice(0,MAX_SUGGESTIONS);\n        }\n        setSuggestions(allSug);\n    }\n\n    const getSuggestions = () => {\n        return (\n            <datalist id='tickers'>\n                {suggestions.map((item,index)=><option key={index} value={item}/>)}\n            </datalist>\n        );\n    }\n\n    const handleSubmit = (e) => {\n        submitVal();\n        e.preventDefault();\n    }\n\n    const submitVal = () => {\n        let finalCik = null, finalName = null;\n        if(toUpper(value) in tickToCik) {\n            const cikNum = tickToCik[toUpper(value)];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            finalName = tickToName[toUpper(value)];\n            finalCik = cik;\n        } else if(value in nameToTick) {\n            const cikNum = tickToCik[nameToTick[value]];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            finalName = value;\n            finalCik = cik;\n        } else {\n            let input = value;\n            if(suggestions.length > 0) {\n                input = suggestions[0];\n            }\n            const regex = /\\(([^)]+)\\)/;\n            const matches = regex.exec(input);\n            if(matches !== null && toUpper(matches[1]) in tickToCik) {\n                const cikNum = tickToCik[toUpper(matches[1])];\n                let cik = cikNum.toString();\n                while(cik.length < 10) {\n                    cik = '0' + cik;\n                }\n                finalName = tickToName[toUpper(matches[1])];\n                finalCik = cik;\n            } else {\n                setShowAlert(true);\n            }\n        }\n        if(finalCik) {\n            props.parentSetCik(finalCik);\n            props.parentSetName(finalName);\n            setShowAlert(false);\n            sessionStorage.setItem('cik', finalCik);\n            sessionStorage.setItem('name', finalName);\n        }\n        props.parentSetInput(value);\n        sessionStorage.setItem('userInput', value);\n    }\n\n    return (\n        <div>\n            <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n                <input type=\"text\" list=\"tickers\" value={value} className=\"form-control\" placeholder=\"Ticker\" onChange={onTextChanged} aria-label=\"Ticker\" aria-describedby=\"button-addon2\"/>\n                {getSuggestions()}\n                <input className=\"btn btn-outline-secondary\" type=\"submit\" value=\"Go\" id=\"button-addon2\"/>\n            </form>\n            <Alert show={showAlert} variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                Invalid name/ticker entered\n            </Alert>\n        </div>\n    );\n}\n\nexport default SearchBar;\n","\nconst incomeKeys = [\n    \"RevenueFromContractWithCustomerExcludingAssessedTax\",\n    \"CostOfGoodsAndServicesSold\",\n    \"GrossProfit\",\n    \"MarketingExpense\",\n    \"ResearchAndDevelopmentExpense\",\n    \"SellingGeneralAndAdministrativeExpense\",\n    \"GeneralAndAdministrativeExpense\",\n    \"OtherOperatingIncomeExpenseNet\",\n    \"CostsAndExpenses\",\n    \"OperatingExpenses\",\n    \"OperatingIncomeLoss\",\n    \"InvestmentIncomeInterest\",\n    \"InterestExpense\",\n    \"OtherNonoperatingIncomeExpense\",\n    \"NonoperatingIncomeExpense\",\n    \"IncomeLossFromContinuingOperationsBeforeIncomeTaxesMinorityInterestAndIncomeLossFromEquityMethodInvestments\",\n    \"IncomeTaxExpenseBenefit\",\n    \"IncomeLossFromEquityMethodInvestments\",\n    \"NetIncomeLoss\",\n    \"EarningsPerShareBasic\",\n    \"EarningsPerShareDiluted\"]\n\n// Must add all increasedecrease tags later\n// investing: Add payments, proceeds: should be in latest period and be non-zero\n// financing: add payments, proceeds with debt/stock/share\n// can add free cash flow\nconst cashFlowKeys = [\n    \"NetIncomeLoss\",\n    \"DepreciationDepletionAndAmortization\",\n    \"ShareBasedCompensation\",\n    \"OtherOperatingActivitiesCashFlowStatement\",\n    \"OtherNoncashIncomeExpense\",\n    \"DeferredIncomeTaxExpenseBenefit\",\n    \"NetCashProvidedByUsedInOperatingActivities\",\n    \"NetCashProvidedByUsedInInvestingActivities\",\n    \"NetCashProvidedByUsedInFinancingActivities\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalentsPeriodIncreaseDecreaseIncludingExchangeRateEffect\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\"\n]\n\nconst balanceKeys = [\n    \"CashAndCashEquivalentsAtCarryingValue\",\n    \"MarketableSecuritiesCurrent\",\n    \"AccountsReceivableNetCurrent\",\n    \"InventoryNet\",\n    \"NontradeReceivablesCurrent\",\n    \"OtherAssetsCurrent\",\n    \"AssetsCurrent\",\n    \"MarketableSecuritiesNoncurrent\",\n    \"PropertyPlantAndEquipmentNet\",\n    \"OtherAssetsNoncurrent\",\n    \"AssetsNoncurrent\",\n    \"Assets\",\n    \"AccountsPayableCurrent\",\n    \"OtherLiabilitiesCurrent\",\n    \"ContractWithCustomerLiabilityCurrent\",\n    \"CommercialPaper\",\n    \"LongTermDebtCurrent\",\n    \"LiabilitiesCurrent\",\n    \"LongTermDebtNoncurrent\",\n    \"OtherLiabilitiesNoncurrent\",\n    \"LiabilitiesNoncurrent\",\n    \"Liabilities\",\n    \"CommonStocksIncludingAdditionalPaidInCapital\",\n    \"RetainedEarningsAccumulatedDeficit\",\n    \"AccumulatedOtherComprehensiveIncomeLossNetOfTax\",\n    \"StockholdersEquity\",\n    \"LiabilitiesAndStockholdersEquity\"\n]\n\nconst IS = \"Income Statement\";\nconst CFS = \"Cash Flow Statement\";\nconst BS = \"Balance Sheet\";\n\nexport const sheets = {\n    IS: IS,\n    CFS: CFS,\n    BS: BS\n}\n\nexport const allKeys = {\n    [IS] : incomeKeys,\n    [CFS] : cashFlowKeys,\n    [BS] : balanceKeys\n}\n","import {Button, ButtonGroup} from \"react-bootstrap\";\nimport {sheets} from \"./constants\"\n\nconst variant = \"secondary\";\n\nfunction SelectSheet(props) {\n\n    const handleClick = (e) => {\n        props.parentSetSheet(e.target.value);\n    }\n\n    const isActive = (sheet) => {\n        return sheet === props.sheet;\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick} size=\"sm\">\n                <Button variant={variant} value={sheets.IS} active={isActive(sheets.IS)}>Income Statement</Button>\n                <Button variant={variant} value={sheets.CFS} active={isActive(sheets.CFS)}>Cash Flow Statement</Button>\n                <Button variant={variant} value={sheets.BS} active={isActive(sheets.BS)}>Balance Sheet</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectSheet;","import {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst variant=\"secondary\";\n\nfunction SelectYearly(props) {\n    const handleClick = (e) => {\n        props.parentSetYearly(e.target.value===\"true\");\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick} size=\"sm\">\n                <Button variant={variant} value={false} active={!props.yearly}>Quarterly</Button>\n                <Button variant={variant} value={true} active={props.yearly}>Yearly</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectYearly;","import {Table} from \"react-bootstrap\";\nimport {allKeys, sheets} from \"./constants\";\nimport \"./StatementTable.css\";\nimport {useState} from \"react\";\nimport SelectSheet from \"./SelectSheet\";\nimport SelectYearly from \"./SelectYearly\";\n\nconst FORM_COUNT = 3;\n\nfunction StatementTable(props) {\n\n    const [sheet,setSheet] = useState(sheets.IS);\n    const [yearly,setYearly] = useState(false);\n    const CASH_KEY = \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\";\n    let millions = false;\n\n    const getColHeader = () => {\n        if(sheet !== sheets.BS) {\n            return (\n                <tr>\n                    <th className=\"label\"/>\n                    <th colSpan={FORM_COUNT}>{yearly ? \"Twelve Months Ended\" : \"Three Months Ended\"}</th>\n                </tr>)\n        }\n    }\n\n    const isValidVal = (val, str) => {\n        if(sheet === sheets.BS || str === CASH_KEY) {\n            if(str === \"Assets\") {\n            console.log(val[\"form\"]); console.log(val[\"val\"]);}\n            return yearly ? val[\"form\"] === \"10-K\" : val[\"form\"] === \"10-Q\" || val[\"form\"] === \"10-K\" ;\n        }\n        if(val[\"frame\"]) {\n            return yearly ? val[\"frame\"].length === 6 : val[\"frame\"].length === 8;\n        }\n        return false;\n    }\n\n    const isValidDate = (form) => {\n        return yearly ? form === \"10-K\" : form === \"10-Q\" || form === \"10-K\";\n    }\n\n    const getVals = (usdVals,str) => {\n        let vals = [];\n        let count = 0;\n        for(let i=usdVals.length-1;i>=0 && count<FORM_COUNT;--i) {\n            if(isValidVal(usdVals[i],str)) {\n                vals.push(usdVals[i][\"val\"]);\n                ++count;\n            }\n        }\n        while(count < FORM_COUNT) {\n            vals.push(\"N/A\");\n            ++count;\n        }\n        return vals;\n    }\n\n    const formatVals = (vals,str) => {\n        for(let i=0;i<vals.length;++i) {\n            let val = vals[i];\n            if(!isNaN(val)) {\n                if (!str.includes(\"PerShare\")) {\n                    val /= (millions ? 1000000 : 1000);\n                    val = Math.round(val);\n                }\n                val = val < 0 ? \"(\" + val.toLocaleString().substr(1) + \")\" : val.toLocaleString();\n                vals[i] = val;\n            }\n        }\n        return vals;\n    }\n\n    const fillDates = () => {\n        const filings = props.submissions[\"filings\"][\"recent\"];\n        let count = 0, i = 0, indices = [];\n        while(count < FORM_COUNT && i < filings[\"form\"].length) {\n            if(isValidDate(filings[\"form\"][i])) {\n                indices.push(i);\n                ++count;\n            }\n            ++i;\n        }\n        indices = indices.map((val) => {return filings[\"reportDate\"][val];});\n        while(indices.length < FORM_COUNT) {\n            const lastDate = indices[indices.length-1];\n            const newYear =  parseInt(lastDate.substr(0,4))-1;\n            indices.push(newYear + lastDate.substring(4));\n        }\n        return indices.map((val, ind) => {\n            return (<th key={ind}>{val}</th>);\n        });\n    }\n\n    const fillData = () => {\n        return allKeys[sheet].map((str, ind) => {\n            const keyData = props.data[\"facts\"][\"us-gaap\"][str];\n            if (keyData) {\n                let usdVals = [];\n                for (const key in keyData[\"units\"]) {\n                    usdVals = usdVals.concat(keyData[\"units\"][key]);\n                }\n                const label = keyData[\"label\"];\n                let vals = getVals(usdVals,str);\n                if(ind===0 && Math.abs(vals[0])>1000000000) {\n                    millions = true;\n                }\n                vals = formatVals(vals,str);\n                const tableData = vals.map((val,ind) => {\n                    return (<td className=\"data\" key={ind}>{val}</td>);\n                });\n                return (\n                    <tr key={ind}>\n                        <td className=\"label\">{label}</td>\n                        {tableData}\n                    </tr>\n                );\n            } else return null;\n        });\n    }\n\n    if(props.loaded) {\n        return (\n            <div className=\"statement-table\">\n                <div className=\"table-settings\">\n                    <div className=\"select-sheet\">\n                        <SelectSheet sheet={sheet} parentSetSheet={setSheet}/>\n                    </div>\n                    <div className=\"select-yearly\">\n                        <SelectYearly yearly={yearly} parentSetYearly={setYearly}/>\n                    </div>\n                </div>\n                <h6 className=\"caption\">(in {millions ? \"millions\" : \"thousands\"})</h6>\n                <Table striped bordered hover size=\"sm\">\n                    <thead className=\"statement-header\">\n                    {getColHeader()}\n                    <tr>\n                        <th className=\"label\"/>\n                        {fillDates()}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {fillData()}\n                    </tbody>\n                </Table>\n            </div>);\n    } else return null;\n}\n\nexport default StatementTable;\n","import {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst variant=\"primary\";\n\nfunction SelectSubmissions(props) {\n    const handleClick = (e) => {\n        props.parentSetShowSubmissions(e.target.value===\"true\");\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick}>\n                <Button variant={variant} value={false} active={!props.showSubmissions}>Statements</Button>\n                <Button variant={variant} value={true} active={props.showSubmissions}>Filings</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectSubmissions;","import {Table} from \"react-bootstrap\";\n\nconst formDescription = {\n    \"10-K\" : \"Annual Report\",\n    \"10-Q\" : \"Quarterly Report\",\n}\n\nfunction FilingTable(props) {\n\n    const fillTable = () => {\n        const recent = props.submissions[\"filings\"][\"recent\"];\n        return recent[\"form\"].map((form,ind) => {\n            if(form === \"10-K\" || form === \"10-Q\") {\n                const accNum = recent[\"accessionNumber\"][ind].replace(/-/g,'');\n                const doc=recent[\"primaryDocument\"][ind];\n                const link = `https://www.sec.gov/ix?doc=/Archives/edgar/data/${props.cik}/${accNum}/${doc}`;\n                return (\n                    <tr key={ind}>\n                        <td>{form}</td>\n                        <td><a rel=\"noreferrer\" target=\"_blank\" href={link}>{formDescription[form]}</a></td>\n                        <td>{recent[\"filingDate\"][ind]}</td>\n                        <td>{recent[\"reportDate\"][ind]}</td>\n                    </tr>\n                )\n            } else return null;\n        });\n    }\n\n    return (\n        <div>\n            <h6><a href={`https://www.sec.gov/edgar/browse/?CIK=${props.cik}&owner=exclude`}>\n                See all filings\n            </a></h6>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>Form type</th>\n                        <th>Form Description</th>\n                        <th>Filing Date</th>\n                        <th>Reporting Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {fillTable()}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default FilingTable;","import './App.css';\nimport SearchBar from './components/SearchBar';\nimport StatementTable from './components/StatementTable';\nimport {Alert} from \"react-bootstrap\";\nimport {useState, useEffect} from \"react\";\nimport fetch from \"axios\";\nimport SelectSubmissions from \"./components/SelectSubmissions\";\nimport FilingTable from \"./components/FilingTable\";\n\nfunction App() {\n  const [name, setName] = useState(sessionStorage.getItem('name') || null);\n  const [cik,setCik] = useState(sessionStorage.getItem('cik') || null);\n  const [data,setData] = useState({});\n  const [loading,setLoading] = useState(false);\n  const [loaded,setLoaded] = useState(false);\n  const [submissions,setSubmissions] = useState({});\n  const [userInput,setUserInput] = useState(sessionStorage.getItem('userInput') || \"\");\n  const [showAlert,setShowAlert] = useState(false);\n  const [showSubmissions, setShowSubmissions] = useState(false);\n\n  useEffect(() => {\n      if(cik) {\n          let loaded1 = false, loaded2 = false;\n          setLoading(true);\n          setLoaded(false);\n          fetch(`https://data.sec.gov/api/xbrl/companyfacts/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setData(result.data);\n                      loaded1 = true;\n                      if(loaded2) {\n                          setLoaded(true);\n                          setLoading(false);\n                      }\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoaded(false);\n                      setLoading(false);\n                      setShowAlert(true);\n                  }\n              )\n          fetch(`https://data.sec.gov/submissions/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setSubmissions(result.data);\n                      loaded2 = true;\n                      if(loaded1) {\n                          setLoaded(true);\n                          setLoading(false);\n                      }\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoaded(false);\n                      setLoading(false);\n                      setShowAlert(true);\n                  }\n              )\n      }\n  }, [cik]);\n\n  const loadTable = () => {\n      if(showSubmissions) {\n          return (\n              <div className=\"submissions-table app-table\">\n                  <FilingTable cik={cik} submissions={submissions} loaded={loaded} loading={loading}/>\n              </div>\n          );\n      } else {\n          return (\n              <div className=\"statement-table app-table\">\n                  <StatementTable submissions={submissions} data={data} loaded={loaded} loading={loading}/>\n              </div>\n          );\n      }\n  }\n\n  const makePage = () => {\n      if(cik) {\n          return (\n              <div className=\"loaded-page\">\n                  <h1 className=\"name\">{name}</h1>\n                  <div className=\"search-bar-loaded\">\n                      <SearchBar input={userInput} parentSetInput={setUserInput} parentSetCik={setCik} parentSetName={setName}/>\n                      <Alert show={showAlert} variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n                          Unable to fetch statements\n                      </Alert>\n                  </div>\n                  <div className=\"select-submissions\">\n                      <SelectSubmissions showSubmissions={showSubmissions} parentSetShowSubmissions={setShowSubmissions}/>\n                  </div>\n                  {loadTable()}\n              </div>\n          );\n      } else {\n          return (\n              <div className=\"search-bar-home\">\n                  <SearchBar input={userInput} parentSetInput={setUserInput} parentSetCik={setCik} parentSetName={setName}/>\n              </div>\n          );\n      }\n  }\n\n  return (\n    <div className=\"App\">\n        {makePage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}