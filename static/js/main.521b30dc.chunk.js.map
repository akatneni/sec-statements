{"version":3,"sources":["components/SearchBar.js","components/StatementKeys.js","components/StatementTable.js","components/SelectSheet.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","suggestions","setSuggestions","tickers","setTickers","names","setNames","tickToCik","setTickToCik","nameToTick","setNameToTick","tickToName","setTickToName","value","setValue","useEffect","n","t","key","dict","obj","toUpper","Object","keys","sort","loadTickers","className","onSubmit","e","cik","toString","length","parentSetName","parentSetCik","input","matches","exec","console","log","preventDefault","type","list","placeholder","onChange","target","sug1","sug2","regex","RegExp","filter","v","test","map","str","includes","concat","slice","id","item","index","allKeys","StatementTable","fillData","sheet","ind","keyData","data","usdVals","label","val","loaded","Table","striped","bordered","hover","size","createTable","variant","SelectSheet","handleActive","ButtonGroup","onClick","parentSetSheet","Button","active","selected","App","name","setName","setCik","setSheet","setData","loading","setLoading","setLoaded","fetch","then","result","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521b30dc.chunk.js","sourcesContent":["import { toUpper } from \"lodash\";\nimport {useState, useEffect} from \"react\";\nimport dict from \"../resources/company_tickers.json\";\n\nfunction SearchBar(props) {\n    const MAX_SUGGESTIONS = 20;\n    const [suggestions, setSuggestions] = useState([]);\n    const [tickers, setTickers] = useState([]);\n    const [names, setNames] = useState([]);\n    const [tickToCik, setTickToCik] = useState({});\n    const [nameToTick, setNameToTick] = useState({});\n    const [tickToName, setTickToName] = useState({});\n    const [value, setValue] = useState(\"\");\n\n    const loadTickers = () => {\n        const tickToCik = {};\n        const nameToTick = {};\n        const tickToName = {};\n        const c = \"cik_str\", n = \"title\", t = \"ticker\";\n        for(const key in dict) {\n            const obj = dict[key];\n            tickToCik[toUpper(obj[t])] = obj[c];\n            nameToTick[obj[n]] = toUpper(obj[t]);\n            tickToName[toUpper(obj[t])] = obj[n];\n        }\n        const tickers = Object.keys(tickToCik).sort();\n        const names = Object.keys(nameToTick).sort();\n        setTickers(tickers);\n        setNames(names);\n        setTickToCik(tickToCik);\n        setNameToTick(nameToTick);\n        setTickToName(tickToName);\n    }\n\n    useEffect(() => {\n        loadTickers();\n    }, []);\n\n    // can be optimized\n    const onTextChanged = (e) => {\n        setSuggestions([]);\n        const value = e.target.value;\n        setValue(value);\n        let suggestions = [];\n        let sug1 = [];\n        let sug2 = [];\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`,'i');\n            sug1 = tickers.filter(v => regex.test(v));\n            sug2 = names.filter(v => regex.test(v));\n            sug2 = sug2.map(str => {\n                if(!sug1.includes(nameToTick[str])) {\n                    return `(${nameToTick[str]}) ${str}`;\n                } else return null;\n            });\n            sug1 = sug1.map(str => {\n                return `(${str}) ${tickToName[str]}`;\n            });\n            suggestions = sug1.concat(sug2);\n            suggestions.sort();\n            suggestions = suggestions.slice(0,MAX_SUGGESTIONS);\n        }\n        setSuggestions(suggestions);\n    }\n\n    const getSuggestions = () => {\n        return (\n            <datalist id='tickers'>\n                {suggestions.map((item,index)=><option key={index} value={item}/>)}\n            </datalist>\n        );\n    }\n\n    const handleSubmit = (e) => {\n        if(toUpper(value) in tickToCik) {\n            const cikNum = tickToCik[toUpper(value)];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            props.parentSetName(tickToName[toUpper(value)]);\n            props.parentSetCik(cik);\n        } else if(value in nameToTick) {\n            const cikNum = tickToCik[nameToTick[value]];\n            let cik = cikNum.toString();\n            while(cik.length < 10) {\n                cik = '0' + cik;\n            }\n            props.parentSetName(value);\n            props.parentSetCik(cik);\n        } else {\n            let input = value;\n            if(suggestions.length > 0) {\n                input = suggestions[0];\n            }\n            const regex = /\\(([^)]+)\\)/;\n            const matches = regex.exec(input);\n            if(matches !== null && toUpper(matches[1]) in tickToCik) {\n                const cikNum = tickToCik[toUpper(matches[1])];\n                let cik = cikNum.toString();\n                while(cik.length < 10) {\n                    cik = '0' + cik;\n                }\n                props.parentSetName(tickToName[toUpper(matches[1])]);\n                props.parentSetCik(cik);\n            } else {\n                console.log(\"invalid input\");\n            }\n        }\n        e.preventDefault();\n    }\n\n    return (\n        <div>\n            <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n                <input type=\"text\" list=\"tickers\" value={value} className=\"form-control\" placeholder=\"Ticker\" onChange={onTextChanged} aria-label=\"Ticker\" aria-describedby=\"button-addon2\"/>\n                {getSuggestions()}\n                <input className=\"btn btn-outline-secondary\" type=\"submit\" value=\"Go\" id=\"button-addon2\"/>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchBar;\n","\nconst incomeKeys = [\n    \"RevenueFromContractWithCustomerExcludingAssessedTax\",\n    \"CostOfGoodsAndServicesSold\",\n    \"GrossProfit\",\n    \"MarketingExpense\",\n    \"ResearchAndDevelopmentExpense\",\n    \"SellingGeneralAndAdministrativeExpense\",\n    \"GeneralAndAdministrativeExpense\",\n    \"OtherOperatingIncomeExpenseNet\",\n    \"CostsAndExpenses\",\n    \"OperatingExpenses\",\n    \"OperatingIncomeLoss\",\n    \"InvestmentIncomeInterest\",\n    \"InterestExpense\",\n    \"OtherNonoperatingIncomeExpense\",\n    \"NonoperatingIncomeExpense\",\n    \"IncomeLossFromContinuingOperationsBeforeIncomeTaxesMinorityInterestAndIncomeLossFromEquityMethodInvestments\",\n    \"IncomeTaxExpenseBenefit\",\n    \"IncomeLossFromEquityMethodInvestments\",\n    \"NetIncomeLoss\",\n    \"EarningsPerShareBasic\",\n    \"EarningsPerShareDiluted\"]\n\n// Must add all increasedecrease tags later\n// investing: Add payments, proceeds: should be in latest period and be non-zero\n// financing: add payments, proceeds with debt/stock/share\n// can add free cash flow\nconst cashFlowKeys = [\n    \"NetIncomeLoss\",\n    \"DepreciationDepletionAndAmortization\",\n    \"ShareBasedCompensation\",\n    \"OtherOperatingActivitiesCashFlowStatement\",\n    \"OtherNoncashIncomeExpense\",\n    \"DeferredIncomeTaxExpenseBenefit\",\n    \"NetCashProvidedByUsedInOperatingActivities\",\n    \"NetCashProvidedByUsedInInvestingActivities\",\n    \"NetCashProvidedByUsedInFinancingActivities\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalentsPeriodIncreaseDecreaseIncludingExchangeRateEffect\",\n    \"CashCashEquivalentsRestrictedCashAndRestrictedCashEquivalents\"\n]\n\nconst balanceKeys = [\n    \"CashAndCashEquivalentsAtCarryingValue\",\n    \"MarketableSecuritiesCurrent\",\n    \"AccountsReceivableNetCurrent\",\n    \"InventoryNet\",\n    \"NontradeReceivablesCurrent\",\n    \"OtherAssetsCurrent\",\n    \"AssetsCurrent\",\n    \"MarketableSecuritiesNoncurrent\",\n    \"PropertyPlantAndEquipmentNet\",\n    \"OtherAssetsNoncurrent\",\n    \"AssetsNoncurrent\",\n    \"Assets\",\n    \"AccountsPayableCurrent\",\n    \"OtherLiabilitiesCurrent\",\n    \"ContractWithCustomerLiabilityCurrent\",\n    \"CommercialPaper\",\n    \"LongTermDebtCurrent\",\n    \"LiabilitiesCurrent\",\n    \"LongTermDebtNoncurrent\",\n    \"OtherLiabilitiesNoncurrent\",\n    \"LiabilitiesNoncurrent\",\n    \"Liabilities\",\n    \"CommonStocksIncludingAdditionalPaidInCapital\",\n    \"RetainedEarningsAccumulatedDeficit\",\n    \"AccumulatedOtherComprehensiveIncomeLossNetOfTax\",\n    \"StockholdersEquity\",\n    \"LiabilitiesAndStockholdersEquity\"\n]\n\nexport const allKeys = {\n    \"is\" : incomeKeys,\n    \"cfs\" : cashFlowKeys,\n    \"bs\" : balanceKeys\n}","import {Table} from \"react-bootstrap\";\nimport {allKeys} from \"./StatementKeys\";\nimport \"./StatementTable.css\";\n\nfunction StatementTable(props) {\n\n    const fillIncome = () => {\n        return allKeys[props.sheet].map((str, ind) => {\n            const keyData = props.data[\"facts\"][\"us-gaap\"][str];\n            if (keyData) {\n                let usdVals;\n                for (const key in keyData[\"units\"]) {\n                    usdVals = keyData[\"units\"][key];\n                }\n                const label = keyData[\"label\"];\n                let val = usdVals[usdVals.length - 1][\"val\"];\n                if (!str.includes(\"PerShare\")) {\n                    val /= 1000000\n                }\n                return (\n                    <tr key={ind}>\n                        <td className=\"label\">{label}</td>\n                        <td className=\"data\">{val}</td>\n                    </tr>\n                );\n            } else return null;\n        });\n    }\n\n    const fillCashFlow = () => {\n        return allKeys[props.sheet].map((str, ind) => {\n            const keyData = props.data[\"facts\"][\"us-gaap\"][str];\n            if (keyData) {\n                const usdVals = keyData[\"units\"][\"USD\"];\n                const label = keyData[\"label\"];\n                let val = usdVals[usdVals.length - 1][\"val\"];\n                if (!str.includes(\"PerShare\")) {\n                    val /= 1000000\n                }\n                return (\n                    <tr key={ind}>\n                        <td className=\"label\">{label}</td>\n                        <td className=\"data\">{val}</td>\n                    </tr>\n                );\n            } else return null;\n        });\n    }\n\n    const fillBalance = () => {\n        return allKeys[props.sheet].map((str, ind) => {\n            const keyData = props.data[\"facts\"][\"us-gaap\"][str];\n            if (keyData) {\n                const usdVals = keyData[\"units\"][\"USD\"];\n                const label = keyData[\"label\"];\n                let val = usdVals[usdVals.length - 1][\"val\"];\n                if (!str.includes(\"PerShare\")) {\n                    val /= 1000000\n                }\n                return (\n                    <tr key={ind}>\n                        <td className=\"label\">{label}</td>\n                        <td className=\"data\">{val}</td>\n                    </tr>\n                );\n            } else return null;\n        });\n    }\n\n    const fillData = () => {\n        if(props.sheet === \"is\") {\n            return fillIncome();\n        } else if(props.sheet === \"cfs\") {\n            return fillCashFlow();\n        } else if(props.sheet === \"bs\") {\n            return fillBalance();\n        }\n    }\n\n    const createTable = () => {\n        if(props.loaded) {\n            return (\n                <div>\n                    <h6 className=\"caption\">(in millions)</h6>\n                    <Table striped bordered hover size=\"sm\">\n                        <tbody>\n                            {fillData()}\n                        </tbody>\n                    </Table>\n                </div>);\n        }\n    }\n\n    return (\n        <div>\n            {createTable()}\n        </div>\n    );\n}\n\nexport default StatementTable;\n","import {Button, ButtonGroup} from \"react-bootstrap\";\n\nconst variant = \"primary\";\n\nfunction SelectSheet(props) {\n\n    const handleClick = (e) => {\n        props.parentSetSheet(e.target.value);\n    }\n\n    const handleActive = (sheet) => {\n        console.log(this);\n        return sheet === props.sheet;\n    }\n\n    return (\n        <div>\n            <ButtonGroup onClick={handleClick}>\n                <Button variant={variant} value=\"is\" active={handleActive(\"is\")} selected={true}>Income Statement</Button>\n                <Button variant={variant} value=\"cfs\" active={handleActive(\"cfs\")}>Cash Flow Statement</Button>\n                <Button variant={variant} value=\"bs\" active={handleActive(\"bs\")}>Balance Sheet</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default SelectSheet;","import './App.css';\nimport SearchBar from './components/SearchBar';\nimport StatementTable from './components/StatementTable';\nimport SelectSheet from './components/SelectSheet';\nimport {useState, useEffect} from \"react\";\nimport fetch from \"axios\";\n\nfunction App() {\n  const [name, setName] = useState(null);\n  const [cik,setCik] = useState(null);\n  const [sheet,setSheet] = useState(\"is\");\n  const [data,setData] = useState({});\n  const [loading,setLoading] = useState(false);\n  const [loaded,setLoaded] = useState(false);\n\n  useEffect(() => {\n      if(cik) {\n          setLoading(true);\n          setLoaded(false);\n          fetch(`https://data.sec.gov/api/xbrl/companyfacts/CIK${cik}.json`)\n              .then(\n                  (result) => {\n                      console.log(result.data);\n                      setData(result.data);\n                      setLoaded(true);\n                      setLoading(false);\n                  },\n                  (error) => {\n                      console.log(error);\n                      setLoading(false);\n                  }\n              )\n      }\n  }, [cik]);\n\n  const makePage = () => {\n      if(cik) {\n          return (\n              <div className=\"loaded-page\">\n                  <h1 className=\"name\">{name}</h1>\n                  <div className=\"search-bar-loaded\">\n                      <SearchBar parentSetCik={setCik} parentSetName={setName}/>\n                  </div>\n                  <div className=\"select-sheet\">\n                      <SelectSheet sheet={sheet} parentSetSheet={setSheet}/>\n                  </div>\n                  <div className=\"statement-table\">\n                      <StatementTable sheet={sheet} data={data} loading={loading} loaded={loaded}/>\n                  </div>\n              </div>\n          );\n      } else {\n          return (\n              <div className=\"search-bar-home\">\n                  <SearchBar parentSetCik={setCik} parentSetName={setName}/>\n              </div>\n          );\n      }\n  }\n\n  return (\n    <div className=\"App\">\n        {makePage()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}